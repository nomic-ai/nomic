version: 2.1

commands:
    prep:
      steps:
        - checkout
        - run:
            name: Install python3 and pip3
            command: sudo apt-get update && sudo apt-get -y install python3 python3-pip
        - run:
            name: Install AWS CLI
            command: sudo pip3 install awscli --upgrade
    build:
      steps:
        - run:
            name: Build Dev installation
            command: make dev

    test:
      steps:
        - run:
            name: Create Atlas Client Environment
            command: make dev
        - run:
            name: Authenticate with Nomic
            command: source env/bin/activate && nomic login staging $NOMIC_API_KEY

#        - run:
#            name: Run Isort
#            command: make isort_ci | cat
#        - run:
#            name: Run Black
#            command: make black_ci | cat
        - run:
            name: Run Unit Tests
            command: make test | cat
#        - run:
#            name: Run Integration Tests
#            command: make mock | cat

    deploy:
      steps:
        - run:
            name: Build documentation.
            command: make documentation | cat
        - run:
            name: Push documentation
            command: aws s3 cp ./site s3://docs.nomic.ai/ --recursive | cat
        - run:
            name: Invalidate docs.nomic.ai cloudfront
            command: aws cloudfront create-invalidation --distribution-id E3NWM6RNA66P6E --paths "/*"


jobs:
  build_test:
    machine:
      image: ubuntu-2004:202010-01 # recommended linux image
    resource_class: large
    steps:
      - prep
      - test

  build_test_deploy:
    machine:
      image: ubuntu-2004:202010-01 # recommended linux image
    resource_class: large
    steps:
      - prep
      - build
#        - test
      - deploy

  build_deploy_pypi:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            sudo apt-get update
            sudo apt-get install build-essential
            pip install setuptools twine
      - run:
          name: Build Python package
          command: |
            python setup.py sdist
      - run:
          name: Upload Python package
          command: |
            twine upload dist/* --username __token__ --password $PYPI_CRED
      - store_artifacts:
          path: dist

workflows:
  version: 2

  commit:
    jobs:
      - build_test:
          filters:
            branches:
              ignore:
                - main
                - prod

  deploy_dev:
    jobs:
      - build_test_deploy:
          filters:
            branches:
              only: main

  deploy_prod:
    jobs:
      - build_test_deploy:
          filters:
            branches:
              only: prod
  
  deploy_pypi:
    jobs:
      - pypi-hold:
          type: approval
          filters:
            branches:
              only: main
      - build_deploy_pypi:
          filters:
            branches:
              only: main
          requires:
            - pypi-hold

#
#  daily:
#    jobs:
#      - build_test_deploy
#    triggers:
#      - schedule:
#          # Build at UTC 11:30pm.
#          cron: "30 23 * * *"
#          filters:
#            branches:
#              only:
#                - master