version: 2.1

commands:
  prep:
    steps:
      - checkout
      - run:
          name: Install python3 and pip3
          command: sudo apt-get update && sudo apt-get -y install python3 python3-pip
      - run:
          name: Install AWS CLI
          command: sudo pip3 install awscli --upgrade

  build:
    steps:
      - run:
          name: Build Dev installation
          command: make dev

  test:
    steps:
      - run:
          name: Create Atlas Client Environment
          command: make dev
      - run:
          name: Run Isort
          command: make isort_ci | cat
      - run:
          name: Run Black
          command: make black_ci | cat
      - run:
          name: Run Pyright
          command: make pyright_ci | cat
      - run:
          name: Authenticate with Nomic
          command: source env/bin/activate && nomic login staging $NOMIC_API_KEY
      - run:
          name: Run Unit Tests
          command: make test | cat

jobs:
  build_test:
    machine:
      image: ubuntu-2204:2024.01.2
    resource_class: large
    steps:
      - prep
      - test

  build_test_deploy:
    machine:
      image: default
    resource_class: large
    steps:
      - prep
      - build

  build_deploy_pypi:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: Check if release commit and deploy to PyPI
          command: |
            if [[ $(git log -1 --pretty=%B) == "chore(main): release"* ]]; then
              sudo apt-get update
              sudo apt-get install build-essential
              pip install setuptools twine
              python setup.py sdist
              twine upload dist/* --username __token__ --password $PYPI_CRED
            else
              echo "Skipping PyPI deployment as this is not a release commit"
            fi
      - store_artifacts:
          path: dist

  release-pr:
    docker:
      - image: cimg/node:20.2.0
    steps:
      - checkout
      - run:
          name: Check commit message and run release-please if not a release commit
          command: |
            COMMIT_MSG=$(git log -1 --pretty=%B)
            if [[ "$COMMIT_MSG" != "chore(main): release"* && "$COMMIT_MSG" != "chore: release"* ]]; then
              npx release-please release-pr \
                --token $GITHUB_TOKEN \
                --repo-url $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME \
                --target-branch $CIRCLE_BRANCH \
                --config-file .circleci/release/release-please-config.json \
                --manifest-file .circleci/release/.release-please-manifest.json
            else
              echo "Skipping release-please as this is a release commit"
            fi

  github-release:
    docker:
      - image: cimg/node:20.2.0
    steps:
      - checkout
      - run:
          name: Configure Git for CircleCI bot
          command: |
            git config --global user.name "circleci[bot]"
            git config --global user.email "circleci[bot]@users.noreply.github.com"
      - run: |
          npx release-please github-release \
            --token $GITHUB_TOKEN \
            --repo-url $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME \
            --target-branch $CIRCLE_BRANCH \
            --config-file .circleci/release/release-please-config.json \
            --manifest-file .circleci/release/.release-please-manifest.json

workflows:
  version: 2

  Lint-test-build:
    jobs:
      - build_test

  Prepare release:
    jobs:
      - release-pr:
          filters:
            branches:
              only:
                - main
                - /hotfix.*/
                - test-build

  GitHub release:
    jobs:
      - github-release:
          filters:
            branches:
              only:
                - main
                - /hotfix.*/

  deploy:
    jobs:
      - build_test_deploy:
          filters:
            branches:
              only: 
                - main
                - prod
      - build_deploy_pypi:
          requires:
            - build_test_deploy
          filters:
            branches:
              only: main